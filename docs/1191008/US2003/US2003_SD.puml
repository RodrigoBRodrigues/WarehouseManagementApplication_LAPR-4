@startuml

actor "Warehouse Employee" as ACT

participant ":UpdateOrderStateToBePreparedUI" as UI
participant ":UpdateOrderStateToBePreparedController" as CTRL

participant "oRepo:OrderRepository" as OREPO
participant "aRepo:AGVRepository" as AREPO

participant "rProd:ProductOrder" as ORDER
participant "lProd:Iterable<ProductOrder>" as IORDER
participant "orderState:OrderState" as STATE

participant "rAGV:AGV" as AGV
participant "lAgv:Iterable<AGV>" as IAGV

activate ACT
ACT -> UI : starts operation
activate UI
UI -> CTRL : lProd = getListProductOrders()
activate CTRL
CTRL -> OREPO : findByState(OrderState)
activate OREPO
deactivate OREPO
deactivate CTRL
UI --> ACT : shows list of product orders in "TO_BE_PREPARED" state
deactivate UI

ACT -> UI : selects one
activate UI
UI -> CTRL : getListAGV()
activate CTRL
CTRL -> AREPO : findAll()
activate AREPO
deactivate AREPO
deactivate CTRL
UI --> ACT : shows list of available AGVs
deactivate UI

ACT -> UI : selects one
activate UI
UI -> CTRL : rProd = updateOrderState(rProd)
activate CTRL
CTRL -> ORDER : setOrderState(OrderState)
activate ORDER
deactivate ORDER
deactivate CTRL
UI -> CTRL : save(rProd)
activate CTRL
CTRL -> OREPO : save(rProd)
activate OREPO
deactivate OREPO
deactivate CTRL
UI -> CTRL : assignProductOrder(rProd, rAGV)
activate CTRL
CTRL -> AGV : addProductOrderWithPriority(rProd)
activate AGV
deactivate AGV
deactivate CTRL
UI -> CTRL : save(rAGV)
activate CTRL
CTRL -> AREPO : save(rAGV)
activate AREPO
deactivate AREPO
deactivate CTRL
UI --> ACT : informs of operation's success
deactivate UI
deactivate ACT


@enduml
